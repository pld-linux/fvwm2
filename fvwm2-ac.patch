--- fvwm-2.5.0/configure.in~	Sat Nov 23 02:40:14 2002
+++ fvwm-2.5.0/configure.in	Sat Nov 23 02:43:20 2002
@@ -528,7 +528,7 @@
 
 dnl Check for standard functions that we have replacements for.
 AC_REPLACE_FUNCS(gethostname strcasecmp strncasecmp strdup strerror usleep atexit)
-AC_SUBST(LIBOBJS)
+AC_LIBOBJ
 
 dnl If we do not have atexit(), then check for on_exit()
 if test $ac_cv_func_atexit = no; then
--- fvwm-2.5.0/configure.in~	Sat Nov 23 02:59:52 2002
+++ fvwm-2.5.0/configure.in	Sat Nov 23 03:05:17 2002
@@ -306,24 +306,8 @@
 with_readline=no
 problem_readline=": Both termcap and ncurses disabled"
 
-smr_ARG_WITHLIB(termcap, , to accomplish readline)
-if test "$with_termcap" != "no"; then
-  dnl Forget cached values, so user can re-run configure
-  $UNSET ac_cv_header_readline_history_h
-  $UNSET ac_cv_lib_readline_readline
-  AC_MSG_CHECKING([with termcap])
-  smr_CHECK_LIB(readline, , line editing/history, readline, readline/history.h,
-    $termcap_LIBS)
-  if test "$readline_LIBS"; then
-    with_readline=yes
-    readline_LIBS="$readline_LIBS $termcap_LIBS"
-    AC_DEFINE(HAVE_READLINE)
-  fi
-fi
 smr_ARG_WITHLIB(ncurses, , to accomplish readline)
 if test "$with_ncurses" != "no" -a ! "$readline_LIBS"; then
-  # We couldn't use readline with termcap; try with ncurses?
-  dnl Doesn't this seem a hacky way to do this??
   dnl unset cached values from last check...
   $UNSET ac_cv_header_readline_history_h
   $UNSET ac_cv_lib_readline_readline
--- fvwm-2.5.0/libs/Makefile.am~	Tue Oct  9 22:05:40 2001
+++ fvwm-2.5.0/libs/Makefile.am	Sat Nov 23 03:24:20 2002
@@ -13,6 +13,6 @@
 	XError.c fvwmsignal.c GetFont.c Strings.c wild.c safemalloc.c \
 	Pointer.c debug.c Grab.c ClientMsg.c fvwmrect.c Cursor.c
 
-libfvwm_a_LIBADD = @LIBOBJS@ @ALLOCA@
+## libfvwm_a_LIBADD = @LIBOBJS@ @ALLOCA@
 
 INCLUDES = -I$(top_srcdir) $(xpm_CFLAGS) $(X_CFLAGS)
